---
import Icon from '../icons/Icon.astro'

const {
  title,
  description,
  date,
  icon = 'calendar',
  iconColor = 'bg-orange-500',
  results = [],
  details = [],
  class: className = '',
  titleInline = false,
  titleHoverColor = false,
  headerDate = null,
  headerSeason = null
} = Astro.props
---

  <div class={`bg-bg-card backdrop-blur-sm rounded-2xl border border-border-dark p-6 hover:border-slate-600/50 transition-all duration-300 hover:shadow-lg hover:shadow-orange-500/20 group ${className}`}>

    {(headerDate || headerSeason) && (
      <header class='flex items-center justify-between mb-4'>
        {headerDate && (
          <time class='text-sm font-semibold text-orange-400 bg-orange-500/10 px-3 py-1 rounded-full'>
            {headerDate}
          </time>
        )}
        {headerSeason && (
          <span class='text-sm text-text-muted bg-bg-secondary px-3 py-1 rounded-full'>
            {headerSeason}
          </span>
        )}
      </header>
    )}

    {(icon || date || (title && titleInline)) && !headerDate && !headerSeason && (
      <div class='flex items-center justify-between mb-6'>
        {titleInline
          ? (
            <div class='flex items-center'>
              {icon && (
                <div class={`w-12 h-12 ${iconColor} rounded-xl flex items-center justify-center mr-4`}>
                  <Icon name={icon} class='text-white' />
                </div>
              )}
              {title && (
                <h3 class='text-xl font-semibold text-white leading-tight'>
                  {title}
                </h3>
              )}
            </div>
            )
          : (
              icon && (
                <div class={`w-12 h-12 ${iconColor} rounded-xl flex items-center justify-center`}>
                  <Icon name={icon} class='text-white' />
                </div>
              )
            )}

        {date && (
          <span class='text-sm font-medium text-text-secondary bg-bg-secondary px-3 py-1 rounded-full'>
            {date}
          </span>
        )}
      </div>
    )}

    {title && !titleInline && (
      <h3 class={`text-xl font-bold mb-4 text-text-primary leading-tight ${titleHoverColor ? 'group-hover:text-orange-400 transition-colors duration-200' : ''}`}>
        {title}
      </h3>
    )}

    {description && (
      <p class='text-text-secondary leading-relaxed mb-6'>
        {description}
      </p>
    )}

    <slot />

    {details.length > 0 && (
      <div class='space-y-3'>
        {details.map((detail, detailIndex) => (
          <div class='flex items-center gap-2'>
            <div class='w-2 h-2 bg-orange-500 rounded-full' />
            <span class='text-sm font-medium text-orange-400'>{detail.label}:</span>
            <span class='text-sm text-text-secondary'>{detail.value}</span>
          </div>
        ))}
      </div>
    )}

    {results.length > 0 && (
      <div class='space-y-3 mt-6'>
        {results.map((result, resultIndex) => (
          <div class='flex items-center space-x-3'>
            <div class='w-2 h-2 bg-orange-500 rounded-full flex-shrink-0' />
            <span class='text-text-primary text-sm'>{result}</span>
          </div>
        ))}
      </div>
    )}
  </div>
