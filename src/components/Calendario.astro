---
// Obtener datos de la API de resistencias
let scheduleData = []
try {
  const response = await fetch(`${Astro.url.origin}/api/resistencias`)
  if (response.ok) {
    scheduleData = await response.json()
  } else {
    console.error('Error al obtener datos de resistencias:', response.status)
  }
} catch (error) {
  console.error('Error al conectar con la API de resistencias:', error)
}
---

  <section class='max-w-6xl mx-auto p-6 bg-bg-card rounded-lg shadow-lg text-text-secondary'>
    <h2 class='text-3xl font-bold text-orange-500 mb-8 text-center'>Calendario de Carreras 2025</h2>

    <div class='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'>
      {scheduleData.map((item, i) => (
        <article
          class='bg-bg-secondary rounded-lg p-5 shadow-md hover:shadow-orange-500/50 transition-shadow duration-300'
          key={i}
        >
          <header class='flex justify-between text-sm text-orange-400 font-semibold mb-2'>
            <span>{item.Season}</span>
            <span>Semana {item.Week}</span>
            <time>{item.Fecha}</time>
          </header>

          <h3 class='text-xl font-bold mb-2 text-text-primary'>{item.Serie}</h3>

          <p>
            <span class='font-semibold text-orange-400'>Equipo:</span> {item.Team === 'SI' ? 'Sí' : 'No'}
          </p>
          <p>
            <span class='font-semibold text-orange-400'>Duración:</span> {item.Duracion}
          </p>
          <p>
            <span class='font-semibold text-orange-400'>Circuito:</span> {item.Circuito}
          </p>
          <p>
            <span class='font-semibold text-orange-400'>Prob. lluvia:</span> {item.Lluvia || 'N/A'}
          </p>
          <p>
            <span class='font-semibold text-orange-400'>Coches:</span> {item.Coches}
          </p>
        </article>
      ))}
    </div>
  </section>
